#!/bin/bash
#
# This file is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.
#
# Author:  Jonas Bernoulli <jonas@bernoul.li>
# Created: 20090924
# Updated: 20100707
#
# Commentary:
#   Show stack of parent profiles of a portage profile.

version="006_pre"

usage() {
    cat <<EOF
Usage: profile-stack [-c[=REGEXP]] [profile]

Show stack of parent profiles of a portage profile.

Options:
  --version             show program's version number and exit
  -h, --help            show this help message and exit
  -c=[regexp]           show content of profiles. If regexp is
                        set only show files whose path relative
                        the current profile match.
  profile               the profile to be shown (defaults to the
                        active profile).  Can be an absolute or
                        relative path.  Or a path relative to
                        PORTDIR/profiles.

For more information see profile-stack(1).
EOF
}

regexp="(eapi|make.defaults|packages|packages.build|package.keywords|package.mask|package.provided|package.unmask|package.use|package.use.force|package.use.mask|profile.bashrc|use.force|use.mask|virtuals)"

seen=""

is_dublicate() {
    for s in $seen
    do
        [ "$1" = "$s" ] && return 0
    done
    return 1
}

walk() {
    profile=${1#$profile_base/}

    [ -e "$1/deprecated" ] && local dpr="DEPRECATED: "

    if is_dublicate $1
    then
        printf "%${2}s%sDUBLICATE: %s\n" "" "$dpr" "$profile"
    else
        local content=$(cd $1;
            find . -maxdepth 2 -type f | sort |
            sed -e "s|^\./||" | grep -E "$regexp")
        if [ -n "$verbose" ]
        then
            printf "%${2}s%s%s\n" "$dpr" "$profile"
            for c in $content
            do
                printf "%$(expr ${2:-0} + 4)s| %s\n" "" "$c"
            done
        elif [ -n "$content" ]
        then
            printf "%${2}s%s%s\n" "" "$dpr" "$profile"
        else
            printf "%${2}s%s(%s)\n" "" "$dpr" "$profile"
        fi
    fi

    seen="$seen $1"
    local dir=$1
    local lnk=$1/parent
    [ -e $lnk ] &&
    while read par
    do
        [[ "${par:0:1}" = "#" || -z "$par" ]] && continue
        [[ "${par:0:1}" = "/" ]] || par=$(readlink -f $dir/$par)
        walk $par $(expr ${2:-0} + 2)
    done < <(tac $lnk)
}

while (( $# > 0 ))
do
    case $1 in
    -h|--help)
        usage
        exit
        ;;
    --version)
        echo "profile-stack-$version"
        exit
        ;;
    -c=*)
        verbose="true"
        regexp=${1#-c=}
        ;;
    -c)
        verbose="true"
        ;;
    -*)
        echo "profile-stack: error: no such option: $1"
        exit 1
        ;;
    *)
        profile=$1
        break
    esac
    shift
done

profile_base=$(portageq envvar PORTDIR)/profiles
profile=$(eselect profile show | head -n 2 | tail -n 1 | tr -d " ")

if [ -z "$1" ]
then
    case $profile in
    /*) walk $profile ;;
    *)  walk $profile_base/$profile ;;
    esac
elif [ -e "$1" ]
then
    walk $(readlink -f $1)
else
    walk $profile_base/$1
fi

exit 0 #FIXME
